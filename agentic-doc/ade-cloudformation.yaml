AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Policy for Landing Agentic Doc Marketplace - Secrets Manager and AWS Marketplace access'

Parameters:
  EKSClusterName:
    Type: String
    Description: Name of the EKS cluster
    Default: va-dev
  
  Namespace:
    Type: String
    Description: Kubernetes namespace
    Default: landing-agentic-doc
  
  SecretName:
    Type: String
    Description: AWS Secrets Manager secret name
    Default: landing-agentic-doc/secrets
  
  PolicyName:
    Type: String
    Description: Name for the IAM policy
    Default: landing-agentic-doc-marketplace-policy
  
  AzureOpenAIAPIKey:
    Type: String
    Description: Azure OpenAI API Key (for ADE 1)
    NoEcho: true
    Default: ''
  
  AzureOpenAIEndpoint:
    Type: String
    Description: Azure OpenAI Endpoint (for ADE 1)
    NoEcho: true
    Default: ''
  
  AnthropicAPIKey:
    Type: String
    Description: Anthropic API Key (for ADE 1)
    NoEcho: true
    Default: ''
  
  GeminiVertexAuth:
    Type: String
    Description: Gemini Vertex Auth (for ADE 2)
    NoEcho: true
    Default: ''
  
  GeminiVertexProject:
    Type: String
    Description: Gemini Vertex Project (for ADE 2)
    NoEcho: true
    Default: ''
  
  GeminiVertexLocation:
    Type: String
    Description: Gemini Vertex Location (for ADE 2)
    NoEcho: true
    Default: ''

Resources:
  AgenticDocSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref SecretName
      Description: !Sub 'API keys for ${EKSClusterName}/${Namespace} - Agentic Doc Marketplace'
      SecretString: !Sub |
        {
          "AZURE_OPENAI_API_KEY": "${AzureOpenAIAPIKey}",
          "AZURE_OPENAI_ENDPOINT": "${AzureOpenAIEndpoint}",
          "ANTHROPIC_API_KEY": "${AnthropicAPIKey}",
          "GEMINI_VERTEX_AUTH": "${GeminiVertexAuth}",
          "GEMINI_VERTEX_PROJECT": "${GeminiVertexProject}",
          "GEMINI_VERTEX_LOCATION": "${GeminiVertexLocation}"
        }
  
  AgenticDocMarketplacePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Ref PolicyName
      Description: !Sub 'Policy for ${EKSClusterName}/${Namespace} - Secrets Manager and AWS Marketplace access'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: !GetAtt AgenticDocSecret.Arn
          - Effect: Allow
            Action:
              - aws-marketplace:RegisterUsage
              - aws-marketplace:MeterUsage
            Resource: '*'

Outputs:
  SecretArn:
    Description: ARN of the created Secrets Manager secret
    Value: !Ref AgenticDocSecret
    Export:
      Name: !Sub '${AWS::StackName}-SecretArn'
  
  SecretName:
    Description: Name of the created Secrets Manager secret
    Value: !Ref SecretName
    Export:
      Name: !Sub '${AWS::StackName}-SecretName'
  
  PolicyArn:
    Description: ARN of the created IAM policy
    Value: !Ref AgenticDocMarketplacePolicy
    Export:
      Name: !Sub '${AWS::StackName}-PolicyArn'
  
  PolicyName:
    Description: Name of the created IAM policy
    Value: !Ref PolicyName
    Export:
      Name: !Sub '${AWS::StackName}-PolicyName'

